name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Set up Python
        run: |
          echo "export PYTHONPATH=src" >> $GITHUB_ENV
          source $GITHUB_ENV
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          python -m flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          export PYTHONPATH=src
          python -m pytest .

  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
      - name: ZAP Scan
        id: zap_scan
        uses: zaproxy/action-baseline@v0.6.1
        with:
          docker_name: 'owasp/zap2docker-stable'
          target: 'http://127.0.0.1:5000'
          # rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
      - name: Save ZAP Results
        run: echo "${{ steps.zap_scan.outputs.result }}" > zap_results.txt

  check_zap_results:
    runs-on: ubuntu-latest
    needs: zap_scan
    steps:
      - name: Check ZAP Results
        run: |
          VULNERABILITIES=$(grep -c "Vulnerability:" zap_results.txt)
          if [ $VULNERABILITIES -gt 0 ]; then
            echo "Security vulnerabilities found! Failing the build."
            exit 1
          fi
